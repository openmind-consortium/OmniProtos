syntax = "proto3";
package openmind;

option csharp_namespace = "OpenMind";

import "common.proto";

service Device {
  rpc List (ListDeviceRequest) returns (stream DeviceRef);
  rpc Connect (ConnectDeviceRequest) returns (ConnectDeviceResponse);
  rpc Disconnect (DisconnectDeviceRequest) returns (DisconnectDeviceResponse);
  rpc ConfigureAccelStream (AccelControlCommand) returns (AccelControlResponse);
  rpc StreamData (StreamDataRequest) returns (stream StreamEvent);
}

message ListDeviceRequest {
  BridgeRef bridge = 1;
}

message ConnectDeviceRequest {
  DeviceRef device = 1;
}

message ConnectDeviceResponse {
  Status status = 1;
}

message DisconnectDeviceRequest {
  DeviceRef device = 1;
}

message DisconnectDeviceResponse {
  Status status = 1;
}

/**
 * NOTE(BNR): Consider making this a union with `oneof` instead of sticking an enum in there.
 */
message AccelControlCommand {
  DeviceRef device = 1;

  enum CommandType {
    UNSPECIFIED = 0;
    START = 1;
    STOP = 2;
  }
  CommandType command = 2;

  int32 sample_rate = 3;
}

message AccelControlResponse {
  Status status = 1;
}

message AccelEvent {
  int32 sample_rate = 1;
  string units = 2;
  repeated double XSamples = 3;
  repeated double YSamples = 4;
  repeated double ZSamples = 5;
}

message FftEvent {
  repeated double fft_output = 1;
  int32 channel = 2;
  int32 fft_size = 3;
  int32 sample_rate = 4;
  string units = 5;
}

message ChannelSamples {
  int32 channel = 1;
  repeated double samples = 2;
}

message TimeDomainEvent {
  bytes debug_info = 1;
  bytes included_channels = 2;
  int32 sample_rate = 3;
  repeated ChannelSamples channel_samples = 4;
  string units = 5;
}

message PowerEvent {
  repeated int32 bands = 1;
  int32 fft_size = 2;
  bool is_power_overrange = 3;
  int32 sample_rate = 4;
  bytes external_values_mask = 5;
  bytes valid_data_mask = 6;
}

message StreamDataRequest {
  DeviceRef device = 1;
}

message StreamEvent {
  oneof event {
    AccelEvent accel = 1;
    FftEvent fft = 2;
    TimeDomainEvent time_domain = 3;
    PowerEvent power = 4;
  }
}